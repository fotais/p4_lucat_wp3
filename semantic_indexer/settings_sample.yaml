##########################
# CONFIGURATION FILE FOR VARIABLES
# USED ACROSS THE PROJECT
##########################


##########################  PIPELINE  ##########################
# Pipeline flags for what processes to perform on the data
pipeline:
  # What  to read
  in:
    # What's the source of the corpus.
    source: mongo # 'mongo', 'file' and 'delete' values currently
    # What's the type of the input to be read. Will use
    # the according fields in this setting file.
    type: edges # text, edges, med_rec currently
    # Do we want to do it all in a streaming fashion?
    stream: False
    # Do we want to perform parallel semrep extraction?
    parallel: False
  # What to do with it
  trans:
    # Extract entities using metamap?
    metamap: False
    # Extract relations using reverb?
    reverb: False
    # Extract entities + relations through semrep?
    semrep: False
    # Transform edges, fetching concepts and other info?
    get_concepts_from_edges: True
  # What to do with the outcome
  out:
    # Create json output?
    json: False
    # Create .csv files for neo4j?
    csv: False
    # Create-update neo4 db?
    neo4j: True
    # Create-update sentences in mongo?
    mongo_sentences: False
    # Create-update collection in mongod
    mongo: False
########################## END PIPELINE ##########################





##########################  INPUT ##########################
# Variables regarding loading
load:
  # Paths to binaries/files
  path:
    # Path to metamap
    metamap: /path/to/metamap/
    # Path to reverb
    reverb: /path/to/reverb/ #MISSING
    # Path to semrep #/media/kostas/DATA/LLD/SEMREP/public_semrep/bin/
    semrep:  /path/to/semrep/
    # Path toAscii binary
    toAscii: /path/to/ascii/ #MISSING
    # Path to input File
    file_path: /path/to/input/ #MISSING
  # Mongo input variables
  mongo:
    # DB Full uri. If user/pass required pass it here like mongodb://user:pass@host:port
    uri: mongodb://localhost:27017
    # DB name
    db: dbname
    # Collection name
    collection: collection_articles
    # Cache collection name
    cache_collection: cache
    # FOR PRINTING PURPOSES ONLY!
    file_path: mongodb://localhost:27017/collection_articles
  # For medical records
  med_rec:
    # Medical record name of the column to read text from
    textfield: PrimaryDiagnosisDescription
    # Field separator
    sep: \t
    # idfield
    idfield: AdmissionID
  # For article-document type of input
  text:
    # Outer field name for the json documents
    itemfield: documents
    # Name of the field to read text from
    textfield: abstractText
    # Idfield
    idfield: pmid
    # Label field
    labelfield: title
    # Sentence Prefix
    sent_prefix: abstract
  # For relation-edge type of input
  edges:
    # Name of the field where edges are stored
    itemfield: relations
    # Currently [Entity, Article and any new one]
    # Type of the subject
    sub_type: Entity
    # Type of the object
    obj_type: Entity
    # Currently [UMLS for cuis, PMC or TEXT for articles, None for precomputed and whatever else for DRUGBANK,MSH etc]
    # Id_field of the subject
    sub_source: None
    # Id_field of the subject
    obj_source: None
##########################  END INPUT ##########################



##########################  API KEYS ##########################
# Variables regarding apis
apis:
  # Biontology for mapping cuis to uris
  biont: 123123123123123
  # Umls ticket service
  umls: 123123123123123
##########################  END API KEYS ##########################



##########################  NEO4j ##########################
# Neoj variables
neo4j:
  # DB url
  host: localhost
  # port
  port: 7474
  # user name
  user: neo4j
  # password
  password: admin
  # name of the resource to be inputted in neo4j
  resource: text
##########################  END NEO4j ##########################


##########################  MONGODB FOR SENTENCES ##########################
# Mongo variables for writing sentences
mongo_sentences:
  # DB Full uri. If user/pass required pass it here like mongodb://user:pass@host:port
  uri: mongodb://localhost:27017
  # DB name
  db: dbname
  # Collection name
  collection: Articles
##########################  END MONGODB ##########################


########################## CACHE  ############################
cache_path: /path/to/cache
########################## END CACHE  ############################

########################## CACHE  ############################
log_path: //path/to/log
########################## END CACHE  ############################


########################## PARALLEL  ############################
# Number of cores to use in parallel schemes. If none, it will be
# equal to cpu count.
num_cores: 4
# Number of items per core to be processed. This will create a batch
# of total size = num_cores*batch_per_core. It defaults to 100
batch_per_core: 1
########################## END PARALLEL  ############################

##########################  OUTPUT ##########################
# Output variables
out:
   # Resulting .json file before neo4j
  json:
    # Path
    out_path: /path/to/json_files
    # Output json outer field name for the documents
    itemfield: relations
    # Output json text field for each document
    json_text_field: text
    # Output Idfield
    json_id_field: id
    # Output Label field
    json_label_field: title
  # Resulting .json file before neo4j
  csv:
    # Path
    out_path: /path/to/csv_files
  # Resulting .json file before neo4j
  neo4j:
    # Just for printing! Change the Neo4j field variables, not this!
    out_path: localhost:7474
  mongo:
    # DB Full uri. If user/pass required pass it here like mongodb://user:pass@host:port
    uri: mongodb://localhost:27017
    # DB name
    db: dbname
    # Collection name
    collection: collection_articles
    # Just for printing! Change the mongo field variables, not this!
    out_path: localhost:27017/collection_articles
##########################  END OUTPUT ##########################


